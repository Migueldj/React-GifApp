{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","console","log","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","rootDiv","document","getElementById","ReactDOM","render"],"mappings":"6LAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEjC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAOF,EAAKG,IAAQJ,IACzB,4BAAKA,Q,uBCNJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,sDAEnBG,QAAQC,IAAIT,GAFO,SAGAU,MAAQV,GAHR,cAGbW,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAKgB,EAAIE,OAAOC,iBAAiBnB,QAIzCQ,QAAQC,IAAIK,GAdO,kBAgBZA,GAhBY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAEtB,ECLwB,SAAEA,GAE1B,MAA0BpB,mBAAS,CAC/B4B,KAAK,GACLQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAY,WACRpB,EAASC,GACJoB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGtB,CAAChB,IAEGiB,EDZ0BK,CAActB,GAAlCa,EAAb,EAAOL,KAAeQ,EAAtB,EAAsBA,QAWtB,OACI,qCACI,oBAAIpB,UAAU,sCAAd,SAAqDI,IAEpDgB,GAAW,wCAEZ,qBAAKpB,UAAU,YAAf,SAGQiB,EAAOH,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEMlBW,EA/BM,WAEjB,MAAoC3C,mBAAS,CAAC,YAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAUA,OACI,qCACI,yCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWsB,KAAK,SAAAV,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADHA,YCnB7BwB,EAAUC,SAASC,eAAe,QACxCC,IAASC,OAEP,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.c856d976.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value = { inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = { title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nWKmXDlfDuOVjY5ORF0TXbOQ7BT9mmkP`;\r\n    console.log(url);\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        } \r\n    })\r\n\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const {data: images , loading} = useFetchGifs( category );\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect( ()=> {\r\n    //     getGifs(category)\r\n    //         // .then( imgs => setImages( imgs ))\r\n    //         .then( setImages )\r\n    // }, [category] )\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceIn\">{category}</h3>\r\n            \r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( ( img ) => \r\n                        <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState }from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Ferrari']);\r\n\r\n    // const handleAdd = (e) => {\r\n        // let newArr = categories.slice(0, categories.length);\r\n        // newArr.push('Naruto');\r\n        // setCategories(newArr);\r\n\r\n        // setCategories([...categories, 'Naruto']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\n\nconst rootDiv = document.getElementById('root');\nReactDOM.render(\n    \n  <GifExpertApp />, rootDiv\n  \n);\n"],"sourceRoot":""}